class Solution {
public:
    bool search(vector<int>& nums, int target) {
        int left=0,right=nums.size()-1;
        while(left<=right){
            int mid=(right-left)/2+left;
            if(nums[mid]==target)return true;
            else if(nums[mid]==nums[left]&&nums[mid]==nums[right]){
                left++;right--;   //如果左右和中间相等则left++,right--；
            }else if(nums[mid]>=nums[left]){//因为现在左右已经不等了，所以这样保证左边为带重复的有序数组
                if(nums[mid]>target&&nums[left]<=target)
                    right=mid-1;
                else
                    left=mid+1;
            }
            else if(nums[mid]<nums[left]){
                if(nums[mid]<target&&nums[right]>=target)
                    left=mid+1;
                else
                    right=mid-1;
            }
        }
        return false;
    }
};
//二分查找有重复的话
