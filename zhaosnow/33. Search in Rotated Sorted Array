class Solution {
public:
    int search(vector<int>& nums, int target) {
        int i=0,j=nums.size()-1;
        while(i<=j){
            int mid=(j-i)/2+i;
            if(nums[mid]==target)return mid;
            else if(nums[mid]>=nums[i]){
                if(nums[i]<=target&&nums[mid]>target)
                    j=mid-1;
                else
                    i=mid+1;
            }else{
                if(nums[mid]<target&&nums[j]>=target)
                    i=mid+1;
                else j=mid-1;
            }
        }
        return -1;
    }
};
//二分查找即保持一边是有序的，然后在有序的中进行查找，如不再有序中，那么必然在无序中
