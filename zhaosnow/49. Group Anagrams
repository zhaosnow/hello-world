//简单map映射问题
class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        map<string,int>p;int cnt=0;
        vector<vector<string>>v;
        for(int i=0;i<strs.size();i++){
            string s=strs[i];
            sort(strs[i].begin(),strs[i].end());
            if(p.find(strs[i])!=p.end()){
            v[p[strs[i]]].push_back(s);
            //sort(v[p[strs[i]]].begin(),v[p[strs[i]]].end());
            }else{
                p[strs[i]]=cnt++;
                v.push_back(vector<string>(1,s));
            }
        }
        for(int i=0;i<v.size();i++){
            sort(v[i].begin(),v[i].end());
        }
        return v;
    }
};
//可以提高20ms，网友答案，i我也没有想明白，如自己写字符串排序函数则可以再次优化。
class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        unordered_map<string, vector<string>> count;
    int i = 0;
    for (auto s : strs)
    {
        sort(s.begin(), s.end());
        count[s].push_back(strs[i++]);
    }
    vector<vector<string>> res;
    for (auto n : count){
        sort(n.second.begin(), n.second.end());
        res.push_back(n.second);
    }
    return res;
    }
};
