//因为最后的节点不多于两个，所以只需从叶子节点挨着删除便可得到最后的结果
class Solution {
public:
    vector<int> findMinHeightTrees(int n, vector<pair<int, int>>& edges) {
        vector<int>v(n,0);
        vector<vector<int>>tmp(n);
        vector<int>leaf;
        if(n==1)leaf.push_back(0);
        if(n<2)return leaf;
        for(int i=0;i<edges.size();i++){
            v[edges[i].first]++;
            v[edges[i].second]++;
            tmp[edges[i].first].push_back(edges[i].second);
            tmp[edges[i].second].push_back(edges[i].first);
        }
        for(int i=0;i<n;i++){
            if(v[i]==1){
                leaf.push_back(i);
            }
        }
        while(n>2){
            vector<int>new_leaf;
            for(int i=0;i<leaf.size();i++){
                n--;
                for(int j=0;j<tmp[leaf[i]].size();j++){
                    if(--v[tmp[leaf[i]][j]]==1)
                        new_leaf.push_back(tmp[leaf[i]][j]);
                }
            }
            leaf.clear();leaf=new_leaf;
        }
        return leaf;
    }
};
