//求众数做法的延生，切记else if的顺序不能出错
class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        int count1=0,count2=0;
        int temp1=0,temp2=0;
        vector<int>res;
        for(int i=0;i<nums.size();i++){
        /*
         if(count1==0){
                temp1=nums[i];count1++;
            }else if(temp1==nums[i]){
                count1++;
            }else if(count2==0){
                temp2=nums[i];
                count2++;
            }else if(temp2==nums[i])
                count2++;
            else
                count1--,count2--;
        如果这样做的话，就会出现错误，详情请执行下述例子[1,2,2,3,2,1,1,3]，当count1=0时，这时数组到第一个3后面的2，那么直接把2赋值
        给temp1,导致出错。
        */
            if(temp1==nums[i]){
                count1++;
            }else if(temp2==nums[i]){
               count2++;
            }else if(count1==0){
                count1++;temp1=nums[i];
            }else if(count2==0){
                count2++;temp2=nums[i]; 
            }
            else
                count1--,count2--;
        }count1=0,count2=0;
        for(int i=0;i<nums.size();i++){
            if(temp1==nums[i])count1++;
            if(temp2==nums[i])count2++;
        }
        if(count1>nums.size()/3)
            res.push_back(temp1);
        if(temp2!=temp1&&count2>nums.size()/3)
            res.push_back(temp2);
        return res;
    }
};
