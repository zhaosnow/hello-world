//和1差不多，所以只放dfs
class Solution {
public:
    vector<int> findOrder(int numCourses, vector<pair<int, int>>& prerequisites) {
       vector<unordered_set<int>>gp(numCourses);
       vector<int>res;
        bool visit[numCourses];
        memset(visit,0,sizeof(visit));
        for(int i=0;i<prerequisites.size();i++){
            gp[prerequisites[i].second].insert(prerequisites[i].first);
        }
        for(int i=0;i<numCourses;i++){
            if(visit[i])continue;
            unordered_set<int>st;
            if(dfs(gp,visit,st,res,i))
                return vector<int>();
        }
        reverse(res.begin(),res.end());
        return res;
    }
    bool dfs(vector<unordered_set<int>>&gp,bool visit[],unordered_set<int>&st,vector<int>&res,int a){
        if(visit[a])return false;
        visit[a]=true;
        bool flag=false;
        st.insert(a);
        for(int i: gp[a]){
          if(st.find(i)!=st.end()||dfs(gp,visit,st,res,i))
                return true;
        }
         st.erase(a);
         res.push_back(a);
        return flag;
    }
};
