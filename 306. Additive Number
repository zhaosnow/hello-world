//这道题一旦前两个数固定，那么后面就也固定了，所以就是枚举前两个数直到找到dfs
class Solution {
public:
    bool isAdditiveNumber(string num) {
        int len=num.size();
        if(len<3)return false;
        for(int i=1;i<=(len-1)/2;i++){
            for(int j=i+1;len-j>=i&&len-j>=j-i;j++){
                if(isAdditive(num.substr(0,i),num.substr(i,j-i),num.substr(j)))return true;
            }
        }
        return false;
    }
    bool isAdditive(string num1,string num2,string temp){
        if(num1.size()>1&&num1[0]=='0'||num2.size()>1&&num2[0]=='0')return false;
        string num=add(num1,num2);
        if(num==temp)return true;
        else if(temp.size()<=num.size()||num.compare(temp.substr(0,num.size()))!=0)return false;
        else return isAdditive(num2,num,temp.substr(num.size()));
    }
    string add(string num1,string num2){
        int i=num1.size()-1,j=num2.size()-1;
        int c=0;
        string temp="";
        while(i>=0||j>=0){
            int a=(i>=0?(num1[i--]-'0'):0)+(j>=0?(num2[j--]-'0'):0)+c;
            temp+=(a%10+'0');
            c=a/10;
        }
        if(c)temp+=(c+'0');
        reverse(temp.begin(),temp.end());
        return temp;
    }
};
//bfs
class Solution {
public:
    bool isAdditiveNumber(string num) {
        int len=num.size();
        if(len<3)return false;
        for(int i=1;i<=(len-1)/2;i++){
            for(int j=i+1;len-j>=i&&len-j>=j-i;j++){
                string s1 = num.substr(0, i);
                string s2 = num.substr(i, j - i);
                long long d1 = atoll(s1.c_str()), d2 = atoll(s2.c_str());
                if ((s1.size() > 1 && s1[0] == '0') || (s2.size() > 1 && s2[0] == '0')) continue;
                long long next = d1 + d2;
                string nexts = to_string(next);
                string now = s1 + s2 + nexts;
                while (now.size() < num.size()) {
                    d1 = d2;
                    d2 = next;
                    next = d1 + d2;
                    nexts = to_string(next);
                    now += nexts;
                }
                if (now == num) return true;
            }
        }
        return false;
    }
};
