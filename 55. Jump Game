//正向贪心
class Solution {
public:
    bool canJump(vector<int>& nums) {
        int n=nums.size()-1;
        int len=0,i=0;
        while(i<n){
            if(i==len&&nums[i]+i<=len)return false;
            len=max(len,nums[i]+i);
            i++;
        }
        return true;
    }
};
//反向贪心
class Solution {
public:
    bool canJump(vector<int>& nums) {
        int len=nums.size()-1;
        bool flag=false;
        
        for(int i=len;i>=0;i--)
        {
            
            if(nums[i]+i<len)
                continue;
            len=i;
            if(!len)
            {
                flag=true;
                break;
            }
        }
        return flag;
    }
};
